<theme-switch>
  <label class='flex cursor-pointer gap-2 sm:none'>
    <svg
      class='text-primary'
      xmlns='http://www.w3.org/2000/svg'
      width='20'
      height='20'
      viewBox='0 0 24 24'
      fill='none'
      stroke='currentColor'
      stroke-width='2'
      stroke-linecap='round'
      stroke-linejoin='round'
      ><circle cx='12' cy='12' r='5'></circle><path
        d='M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4'
      ></path></svg
    >
    <input
      id='astro-color-scheme-switch'
      type='checkbox'
      class='toggle theme-controller text-primary'
    />
    <svg
      class='text-primary'
      xmlns='http://www.w3.org/2000/svg'
      width='20'
      height='20'
      viewBox='0 0 24 24'
      fill='none'
      stroke='currentColor'
      stroke-width='2'
      stroke-linecap='round'
      stroke-linejoin='round'
      ><path d='M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z'></path></svg
    >
  </label>
</theme-switch>

<style lang="scss">
  theme-switch {
    min-width: 7rem;
  }
</style>

<script>
  import { EVENT_CHANGE_THEME } from '@/constants'
  import { getCurrentTheme, getNextTheme } from '@/utilities'

  class ThemeSwitch extends HTMLElement {
    #abortController!: AbortController

    connectedCallback() {
      this.#abortController = new AbortController()
      const { signal } = this.#abortController

      const input = this.querySelector<HTMLInputElement>(
        '#astro-color-scheme-switch'
      )!

      input.addEventListener(
        'change',
        (event) => {
          const theme = getNextTheme()
          const themeChangeEvent = new CustomEvent(EVENT_CHANGE_THEME, {
            detail: { theme }
          })
          document.dispatchEvent(themeChangeEvent)
        },
        { signal }
      )

      setTimeout(() => {
        const currentTheme = getCurrentTheme()!
        input.checked = currentTheme.name !== 'light'
      }, 0)
    }

    disconnectedCallback() {
      this.#abortController.abort()
    }
  }

  customElements.define('theme-switch', ThemeSwitch)
</script>
