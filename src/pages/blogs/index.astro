---
import type { GetStaticPaths } from "astro";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import BigSection from "../../components/02-molecules/texts/BigSection.astro"
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";

import { loadBlogsData } from "@/controllers";
import type { Post } from "@/utilities";
import BaseHTML from "@/components/01-atoms/BaseHTML.astro";

export const getStaticPaths = (async () => {
  let posts: Post[] = []
  let params = {}
  try {
    const blogsDataResponse = await loadBlogsData()
    posts = blogsDataResponse.posts
    return [{ props: { posts }, params }];
  } catch {
    return [{ props: { posts }, params }];
  }
}) satisfies GetStaticPaths;

const { posts } = await loadBlogsData() ?? { posts: [] }

const isDev = import.meta.env.DEV
---
<BaseHTML>
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main class="container mx-auto mt-20">
      {isDev && <BigSection title="Blogs" description="My place to share my knowledges and opinions." viewTransitionName="my-blogs" />}
      <section class="flex flex-wrap justify-center" style="gap: 1rem;">
          {
            posts?.map((post) => (
              <a href={`/blogs/${post.slug}/`} class="card w-96 bg-base-100 shadow-xl hover:text-primary">
                <figure>
                  <img loading="lazy" src={post.coverImage?.url ?? ''} transition:name={`article-hero-${post.id}`} alt="Shoes" />
                </figure>
                <div class="card-body">
                  <h2 class="card-title" transition:name={`article-title-${post.id}`}>{post.title}</h2>
                  <p>{post.brief}</p>
                </div>
              </a>
            )) ?? false
          }
      </section>
    </main>
    <Footer />
  </body>
</BaseHTML>
